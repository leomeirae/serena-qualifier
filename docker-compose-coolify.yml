networks:
  coolify:
    external: true

x-kestra-config: &kestra-config
  KESTRA_CONFIGURATION: |
    datasources:
      postgres:
        url: jdbc:postgresql://postgres:5432/kestra
        driverClassName: org.postgresql.Driver
        username: kestra
        password: kestra123
    kestra:
      repository:
        type: postgres
      storage:
        type: local
        local:
          basePath: "/app/storage"
      queue:
        type: postgres
      tasks:
        tmpDir:
          path: /tmp/kestra-wd/tmp
      variables:
        env-vars-prefix: ""
    micronaut:
      server:
        port: 8081
        cors:
          enabled: true
          configurations:
            web:
              allowed-origins:
                - "https://kestra.darwinai.com.br"
                - "https://api.darwinai.com.br"
                - "https://kestrawebhook.darwinai.com.br"
              allowed-methods:
                - GET
                - POST
                - PUT
                - DELETE
                - OPTIONS
              allowed-headers:
                - "*"
              allow-credentials: true

volumes:
  postgres_data:
  kestra_data:

services:
  postgres:
    image: postgres:15-alpine
    environment:
      POSTGRES_DB: kestra
      POSTGRES_USER: kestra
      POSTGRES_PASSWORD: kestra123
    volumes:
      - postgres_data:/var/lib/postgresql/data
    restart: unless-stopped
    networks:
      - coolify
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U kestra -d kestra"]
      interval: 10s
      timeout: 5s
      retries: 5

  redis:
    image: redis:7-alpine
    command: redis-server --appendonly yes
    restart: unless-stopped
    networks:
      - coolify
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 10s
      timeout: 5s
      retries: 5

  # Migration is handled automatically by standalone server
  # Removing separate migration service to avoid restart loops

  kestra:
    image: kestra/kestra:latest-full
    user: root
    command: ["server", "standalone"]
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock
      - kestra_data:/app/storage
      - /tmp/kestra-wd:/tmp/kestra-wd
    environment:
      <<: *kestra-config
      KESTRA_LOG_LEVEL: INFO
      JAVA_OPTS: "-server -XX:MaxRAMPercentage=75.0 -Xms512m -Xmx2g"
      TZ: America/Sao_Paulo
    depends_on:
      postgres:
        condition: service_started
    restart: unless-stopped
    networks:
      - coolify
    healthcheck:
      test: ["CMD", "sh", "-c", "wget --no-verbose --tries=1 --spider http://localhost:8081/ || exit 1"]
      interval: 30s
      timeout: 15s
      retries: 15
      start_period: 240s
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.kestra.rule=Host(`kestra.darwinai.com.br`)"
      - "traefik.http.services.kestra.loadbalancer.server.port=8081"

  webhook-service:
    image: python:3.11-slim
    working_dir: /app
    environment:
      # Configurações do webhook
      WHATSAPP_VERIFY_TOKEN: "${WHATSAPP_VERIFY_TOKEN}"
      KESTRA_API_URL: "http://kestra:8081"
      PYTHONPATH: "/app"
    depends_on:
      kestra:
        condition: service_healthy
    restart: unless-stopped
    networks:
      - coolify
    volumes:
      - ./:/app
    command: >
      sh -c "
        apt-get update && apt-get install -y curl &&
        pip install --no-cache-dir -r requirements.txt &&
        uvicorn webhook_service:app --host 0.0.0.0 --port 8001
      "
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8001/"]
      interval: 30s
      timeout: 15s
      retries: 8
      start_period: 120s
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.webhook.rule=Host(`kestrawebhook.darwinai.com.br`)"
      - "traefik.http.services.webhook.loadbalancer.server.port=8001"

  api-principal:
    image: python:3.11-slim
    working_dir: /app
    environment:
      # Configurações da API
      PYTHONPATH: "/app"
      # Variáveis do Supabase
      SECRET_SUPABASE_URL: "${SECRET_SUPABASE_URL}"
      SECRET_SUPABASE_KEY: "${SECRET_SUPABASE_KEY}"
      # Variáveis do OpenAI
      OPENAI_API_KEY: "${OPENAI_API_KEY}"
      # Variáveis do WhatsApp
      WHATSAPP_TOKEN: "${WHATSAPP_TOKEN}"
      WHATSAPP_VERIFY_TOKEN: "${WHATSAPP_VERIFY_TOKEN}"
      # Variáveis da API Serena
      SERENA_API_TOKEN: "${SERENA_API_TOKEN}"
      SERENA_API_BASE_URL: "${SERENA_API_BASE_URL}"
      # Kestra API
      KESTRA_API_URL: "http://kestra:8081"
    volumes:
      - ./:/app
    networks:
      - coolify
    depends_on:
      kestra:
        condition: service_healthy
    restart: unless-stopped
    command: >
      sh -c "
        apt-get update && apt-get install -y curl &&
        pip install --no-cache-dir -r requirements.txt &&
        uvicorn api_principal:app --host 0.0.0.0 --port 3001
      "
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:3001/"]
      interval: 30s
      timeout: 15s
      retries: 8
      start_period: 120s
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.api.rule=Host(`api.darwinai.com.br`)"
      - "traefik.http.services.api.loadbalancer.server.port=3001" 