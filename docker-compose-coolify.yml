networks:
  coolify:
    external: true

x-kestra-config: &kestra-config
  KESTRA_CONFIGURATION: |
    datasources:
      postgres:
        url: jdbc:postgresql://postgres:5432/kestra
        driverClassName: org.postgresql.Driver
        username: kestra
        password: kestra123
    kestra:
      repository:
        type: postgres
      storage:
        type: local
        local:
          basePath: "/app/storage"
      queue:
        type: postgres
      tasks:
        tmpDir:
          path: /tmp/kestra-wd/tmp
      variables:
        # Configurações globais para workflows
        redis_url: "redis://redis:6379/0"
        # Mapeamento de variáveis de ambiente
        envVarsPrefix: ""
      secret:
        type: env
    micronaut:
      server:
        port: 8081
        proxy-target-header: "X-Forwarded-Proto"
        proxy-forwarded-header: "X-Forwarded-For"
        cors:
          enabled: true
          configurations:
            web:
              allowed-origins:
                - "https://kestra.darwinai.com.br"
                - "https://api.darwinai.com.br"
                - "https://kestrawebhook.darwinai.com.br"
                - "https://www.saasia.com.br"
              allowed-methods:
                - GET
                - POST
                - PUT
                - DELETE
                - OPTIONS
              allowed-headers:
                - "*"
              allow-credentials: true

volumes:
  postgres_data:
  kestra_data:

services:
  postgres:
    image: postgres:15-alpine
    environment:
      POSTGRES_DB: kestra
      POSTGRES_USER: kestra
      POSTGRES_PASSWORD: kestra123
    volumes:
      - postgres_data:/var/lib/postgresql/data
    restart: unless-stopped
    networks:
      - coolify
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U kestra -d kestra"]
      interval: 10s
      timeout: 5s
      retries: 5

  redis:
    image: redis:7-alpine
    command: redis-server --appendonly yes --maxmemory 512mb --maxmemory-policy allkeys-lru
    restart: unless-stopped
    networks:
      - coolify
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 10s
      timeout: 5s
      retries: 5

  # Migration is handled automatically by standalone server
  # Removing separate migration service to avoid restart loops

  kestra-agent:
    build:
      context: .
      dockerfile: Dockerfile.kestra_agent
    image: kestra-agent:latest
    volumes:
      - ./scripts:/app/scripts
      - ./serena-sdr/scripts:/app/scripts/sdr
      - ./requirements.txt:/app/requirements.txt
    environment:
      TZ: America/Sao_Paulo
      # APIs principais
      OPENAI_API_KEY: "${OPENAI_API_KEY}"
      SERENA_API_TOKEN: "${SERENA_API_TOKEN}"
      SERENA_API_BASE_URL: "${SERENA_API_BASE_URL}"
      WHATSAPP_API_TOKEN: "${WHATSAPP_API_TOKEN}"
      WHATSAPP_PHONE_NUMBER_ID: "${WHATSAPP_PHONE_NUMBER_ID}"
      # Supabase (decodificado automaticamente)
      SUPABASE_URL: "${SECRET_SUPABASE_URL}"
      SUPABASE_KEY: "${SECRET_SUPABASE_KEY}"
      # PostgreSQL
      DB_CONNECTION_STRING: "${SECRET_DB_CONNECTION_STRING}"
      # Senha do Supabase para conexão direta (usando prefixo padrão KESTRA_SECRETS_)
      KESTRA_SECRETS_SUPABASE_PASSWORD: "@Atjlc151523"
      # Redis
      REDIS_URL: "redis://redis:6379/0"
      # MCP Servers URLs
      SUPABASE_MCP_URL: "http://supabase-mcp-server:3000"
      SERENA_MCP_URL: "http://serena-mcp-server:3002"
      WHATSAPP_MCP_URL: "http://whatsapp-mcp-server:3003"
    networks:
      - coolify
    depends_on:
      redis:
        condition: service_healthy
      supabase-mcp-server:
        condition: service_healthy
      serena-mcp-server:
        condition: service_healthy
      whatsapp-mcp-server:
        condition: service_healthy
    restart: unless-stopped
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8080/health"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 40s

  kestra:
    image: kestra/kestra:v0.23.7
    user: root
    command: ["server", "standalone"]
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock
      - kestra_data:/app/storage
      - /tmp/kestra-wd:/tmp/kestra-wd
      - ./scripts:/app/scripts
      - ./kestra/workflows:/app/flows
    environment:
      <<: *kestra-config
      KESTRA_LOG_LEVEL: INFO
      JAVA_OPTS: "-server -XX:MaxRAMPercentage=80.0 -Xms512m -Xmx2g -XX:+UseG1GC -XX:+UseStringDeduplication"
      TZ: America/Sao_Paulo
      # Configurações para proxy reverso HTTPS
      MICRONAUT_SERVER_PROXY_TARGET_HEADER: "X-Forwarded-Proto"
      MICRONAUT_SERVER_PROXY_FORWARDED_HEADER: "X-Forwarded-For"
      # Referência para a imagem do agente
      KESTRA_AGENT_IMAGE: "kestra-agent:latest"
      # Secrets para função secret() nos workflows (base64)
      SECRET_OPENAI_API_KEY: "${SECRET_OPENAI_API_KEY}"
      SECRET_WHATSAPP_API_TOKEN: "${SECRET_WHATSAPP_API_TOKEN}"
      SECRET_SERENA_API_TOKEN: "${SECRET_SERENA_API_TOKEN}"
      SECRET_SUPABASE_URL: "${SECRET_SUPABASE_URL}"
      SECRET_SUPABASE_KEY: "${SECRET_SUPABASE_KEY}"
      SECRET_DB_CONNECTION_STRING: "${SECRET_DB_CONNECTION_STRING}"
      # Senha do Supabase para pluginDefaults PostgreSQL (usando prefixo padrão KESTRA_SECRETS_)
      KESTRA_SECRETS_SUPABASE_PASSWORD: "@Atjlc151523"
      # URL de conexão centralizada do Supabase/PostgreSQL (com senha já resolvida)
      KESTRA_SECRETS_SUPABASE_DB_URL: "jdbc:postgresql://aws-0-sa-east-1.pooler.supabase.com:6543/postgres?user=postgres.ynyvrnasvcxyvjzhzbwf&password=@Atjlc151523"
      # Segredos adicionais para função secret() nos workflows
      KESTRA_SECRETS_OPENAI_API_KEY: "sk-proj-L7BHQG27o_Yo3kw..."
      KESTRA_SECRETS_SERENA_API_TOKEN: "eyJhbGciOiJIUzI1NiIsInR5..."
      KESTRA_SECRETS_WHATSAPP_API_TOKEN: "RUFBUFIwRkc1c3E4Qk85..."
      # Variáveis de environment para workflows (texto plano)
      OPENAI_API_KEY: "${OPENAI_API_KEY}"
      WHATSAPP_API_TOKEN: "${WHATSAPP_API_TOKEN}"
      WHATSAPP_PHONE_NUMBER_ID: "${WHATSAPP_PHONE_NUMBER_ID}"
      WHATSAPP_VERIFY_TOKEN: "${WHATSAPP_VERIFY_TOKEN}"
      SERENA_API_TOKEN: "${SERENA_API_TOKEN}"
      SERENA_API_BASE_URL: "${SERENA_API_BASE_URL}"
      # Variáveis adicionais do Coolify
      CHATWOOT_WEBHOOK_URL: "${CHATWOOT_WEBHOOK_URL}"
      WHATSAPP_APP_SECRET: "${WHATSAPP_APP_SECRET}"
      WHATSAPP_BUSINESS_ID: "${WHATSAPP_BUSINESS_ID}"
      # Configuração do Redis para workflows
      REDIS_URL: "redis://redis:6379/0"
      SECRET_REDIS_URL: "redis://redis:6379/0"
      # Configuração de Basic Auth
      KESTRA_SERVER_BASICAUTH_ENABLED: "true"
      KESTRA_SERVER_BASICAUTH_USERNAME: "leonardo@darwinai.com.br"
      KESTRA_SERVER_BASICAUTH_PASSWORD: "@Atjlc151523"
    depends_on:
      postgres:
        condition: service_started
      redis:
        condition: service_healthy
      supabase-mcp-server:
        condition: service_healthy
      serena-mcp-server:
        condition: service_healthy
      whatsapp-mcp-server:
        condition: service_healthy
    restart: unless-stopped
    networks:
      - coolify
    healthcheck:
      test: ["CMD", "sh", "-c", "wget --no-verbose --tries=1 --spider http://localhost:8081/ || exit 1"]
      interval: 30s
      timeout: 15s
      retries: 15
      start_period: 240s
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.kestra.rule=Host(`kestra.darwinai.com.br`)"
      - "traefik.http.services.kestra.loadbalancer.server.port=8081"
      - "traefik.http.routers.kestra.middlewares=kestra-headers"
      - "traefik.http.middlewares.kestra-headers.headers.customRequestHeaders.X-Forwarded-Proto=https"
      - "traefik.http.middlewares.kestra-headers.headers.customRequestHeaders.X-Forwarded-Host=kestra.darwinai.com.br"
      - "traefik.http.middlewares.kestra-headers.headers.customRequestHeaders.X-Forwarded-Port=443"
      - "traefik.http.middlewares.kestra-headers.headers.customResponseHeaders.X-Frame-Options=DENY"
      - "traefik.http.middlewares.kestra-headers.headers.customResponseHeaders.X-Content-Type-Options=nosniff"
      - "traefik.http.middlewares.kestra-headers.headers.customResponseHeaders.Strict-Transport-Security=max-age=31536000; includeSubDomains"

  webhook-service:
    image: python:3.11-slim
    working_dir: /app
    environment:
      TZ: America/Sao_Paulo
      # Configurações do webhook
      WHATSAPP_VERIFY_TOKEN: "${WHATSAPP_VERIFY_TOKEN}"
      WHATSAPP_APP_SECRET: "${WHATSAPP_APP_SECRET}"
      KESTRA_API_URL: "http://kestra:8081"
      CHATWOOT_WEBHOOK_URL: "${CHATWOOT_WEBHOOK_URL}"
      # APIs principais (para compatibilidade)
      OPENAI_API_KEY: "${OPENAI_API_KEY}"
      SERENA_API_TOKEN: "${SERENA_API_TOKEN}"
      SERENA_API_BASE_URL: "${SERENA_API_BASE_URL}"
      WHATSAPP_API_TOKEN: "${WHATSAPP_API_TOKEN}"
      WHATSAPP_PHONE_NUMBER_ID: "${WHATSAPP_PHONE_NUMBER_ID}"
      # Supabase
      SUPABASE_URL: "${SECRET_SUPABASE_URL}"
      SUPABASE_KEY: "${SECRET_SUPABASE_KEY}"
      DB_CONNECTION_STRING: "${SECRET_DB_CONNECTION_STRING}"
      # Redis
      REDIS_URL: "redis://redis:6379/0"
      # MCP Servers URLs
      SUPABASE_MCP_URL: "http://supabase-mcp-server:3000"
      SERENA_MCP_URL: "http://serena-mcp-server:3002"
      WHATSAPP_MCP_URL: "http://whatsapp-mcp-server:3003"
      PYTHONPATH: "/app"
    depends_on:
      kestra:
        condition: service_healthy
      whatsapp-mcp-server:
        condition: service_healthy
    restart: unless-stopped
    networks:
      - coolify
    volumes:
      - ./scripts:/app/scripts
      - ./requirements.txt:/app/requirements.txt
    command: >
      sh -c "
        apt-get update && apt-get install -y curl &&
        pip install --no-cache-dir -r requirements.txt &&
        cd /app/scripts &&
        uvicorn webhook_service:app --host 0.0.0.0 --port 8001 --reload
      "
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8001/"]
      interval: 30s
      timeout: 15s
      retries: 8
      start_period: 120s
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.webhook.rule=Host(`kestrawebhook.darwinai.com.br`) && Path(`/webhook`)"
      - "traefik.http.services.webhook.loadbalancer.server.port=8001"
      - "traefik.http.routers.webhook.middlewares=webhook-stripprefix"
      - "traefik.http.middlewares.webhook-stripprefix.stripprefix.prefixes=/webhook"

  # =============================================================================
  # MCP SERVERS - SERENA SDR
  # =============================================================================

  supabase-mcp-server:
    image: node:18-alpine
    working_dir: /app
    volumes:
      - ./config/mcp/supabase:/app
    environment:
      NODE_ENV: production
      PORT: 3000
      # Supabase Configuration
      SUPABASE_URL: "${SECRET_SUPABASE_URL}"
      SUPABASE_ANON_KEY: "${SECRET_SUPABASE_KEY}"
    networks:
      - coolify
    depends_on:
      postgres:
        condition: service_healthy
    restart: unless-stopped
    command: >
      sh -c "
        apk add --no-cache curl &&
        npm install &&
        npm start
      "
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:3000/health"]
      interval: 30s
      timeout: 10s
      retries: 5
      start_period: 60s

  serena-mcp-server:
    image: node:18-alpine
    working_dir: /app
    volumes:
      - ./config/mcp/serena:/app
    environment:
      NODE_ENV: production
      PORT: 3002
      # Serena API Configuration
      SERENA_API_TOKEN: "${SERENA_API_TOKEN}"
      SERENA_API_BASE_URL: "${SERENA_API_BASE_URL}"
    networks:
      - coolify
    restart: unless-stopped
    command: >
      sh -c "
        apk add --no-cache curl &&
        npm install &&
        npm start
      "
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:3002/health"]
      interval: 30s
      timeout: 10s
      retries: 5
      start_period: 60s

  whatsapp-mcp-server:
    image: node:18-alpine
    working_dir: /app
    volumes:
      - ./config/mcp/whatsapp:/app
    environment:
      NODE_ENV: production
      PORT: 3003
      # WhatsApp Configuration
      WHATSAPP_API_TOKEN: "${WHATSAPP_API_TOKEN}"
      WHATSAPP_PHONE_NUMBER_ID: "${WHATSAPP_PHONE_NUMBER_ID}"
      WHATSAPP_BUSINESS_ACCOUNT_ID: "${WHATSAPP_BUSINESS_ACCOUNT_ID}"
    networks:
      - coolify
    restart: unless-stopped
    command: >
      sh -c "
        apk add --no-cache curl &&
        npm install &&
        npm start
      "
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:3003/health"]
      interval: 30s
      timeout: 10s
      retries: 5
      start_period: 60s

  api-principal:
    image: python:3.11-slim
    working_dir: /app
    environment:
      # Configurações da API
      PYTHONPATH: "/app"
      # Variáveis do Supabase
      SECRET_SUPABASE_URL: "${SECRET_SUPABASE_URL}"
      SECRET_SUPABASE_KEY: "${SECRET_SUPABASE_KEY}"
      # Variáveis do OpenAI
      OPENAI_API_KEY: "${OPENAI_API_KEY}"
      # Variáveis do WhatsApp
      WHATSAPP_VERIFY_TOKEN: "${WHATSAPP_VERIFY_TOKEN}"
      # Variáveis da API Serena
      SERENA_API_TOKEN: "${SERENA_API_TOKEN}"
      SERENA_API_BASE_URL: "${SERENA_API_BASE_URL}"
      # Kestra API
      KESTRA_API_URL: "http://kestra:8081"
    volumes:
      - ./:/app
    networks:
      - coolify
    depends_on:
      kestra:
        condition: service_healthy
    restart: unless-stopped
    command: >
      sh -c "
        apt-get update && apt-get install -y curl &&
        pip install --no-cache-dir -r requirements.txt &&
        uvicorn api_principal:app --host 0.0.0.0 --port 3001 --reload
      "
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:3001/"]
      interval: 30s
      timeout: 15s
      retries: 8
      start_period: 120s
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.api.rule=Host(`api.darwinai.com.br`)"
      - "traefik.http.services.api.loadbalancer.server.port=3001" 