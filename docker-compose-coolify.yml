version: '3.8'

x-kestra-config: &kestra-config
  KESTRA_CONFIGURATION: |
    datasources:
      postgres:
        url: jdbc:postgresql://postgres:5432/kestra
        driverClassName: org.postgresql.Driver
        username: kestra
        password: kestra123
    kestra:
      repository:
        type: postgres
      storage:
        type: local
        local:
          basePath: "/app/storage"
      queue:
        type: postgres
      variables:
        env-vars-prefix: ""
    micronaut:
      server:
        cors:
          enabled: true
          configurations:
            web:
              allowed-origins:
                - "https://kestra.darwinai.com.br"
                - "https://api.darwinai.com.br"
                - "https://webhookkestra.darwinai.com.br"
              allowed-methods:
                - GET
                - POST
                - PUT
                - DELETE
                - OPTIONS
              allowed-headers:
                - "*"
              allow-credentials: true

volumes:
  postgres_data:
  kestra_data:

services:
  postgres:
    image: postgres:15-alpine
    environment:
      POSTGRES_DB: kestra
      POSTGRES_USER: kestra
      POSTGRES_PASSWORD: kestra123
    volumes:
      - postgres_data:/var/lib/postgresql/data
    restart: unless-stopped
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U kestra -d kestra"]
      interval: 10s
      timeout: 5s
      retries: 5

  redis:
    image: redis:7-alpine
    command: redis-server --appendonly yes
    restart: unless-stopped
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 10s
      timeout: 5s
      retries: 5

  kestra-migration:
    image: kestra/kestra:latest-full
    command: ["database", "migrate"]
    user: root
    environment:
      <<: *kestra-config
    depends_on:
      postgres:
        condition: service_healthy

  kestra:
    image: kestra/kestra:latest-full
    user: root
    ports:
      - "8080:8081"
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock
      - kestra_data:/app/storage
    environment:
      <<: *kestra-config
      KESTRA_LOG_LEVEL: INFO
      JAVA_OPTS: "-server -XX:MaxRAMPercentage=50.0 -Xms256m -Xmx1g"
      TZ: America/Sao_Paulo
    depends_on:
      - kestra-migration
      - redis
    restart: unless-stopped
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8080/ui/"]
      interval: 30s
      timeout: 10s
      retries: 5
      start_period: 120s

  webhook-service:
    image: python:3.11-slim
    working_dir: /app
    ports:
      - "8000:8000"
    environment:
      KESTRA_API_URL: "http://kestra:8080"
      PYTHONPATH: "/app"
    depends_on:
      kestra:
        condition: service_healthy
    restart: unless-stopped
    command: >
      sh -c "
        pip install --no-cache-dir -r requirements.txt &&
        uvicorn webhook_service:app --host 0.0.0.0 --port 8000
      "
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8000/"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 60s

  api-principal:
    image: python:3.11-slim
    working_dir: /app
    ports:
      - "3001:3001"
    environment:
      KESTRA_API_URL: "http://kestra:8080"
      WEBHOOK_SERVICE_URL: "http://webhook-service:8000"
      PYTHONPATH: "/app"
    depends_on:
      kestra:
        condition: service_healthy
    restart: unless-stopped
    command: >
      sh -c "
        pip install --no-cache-dir -r requirements.txt &&
        uvicorn api_principal:app --host 0.0.0.0 --port 3001
      "
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:3001/"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 60s
