networks:
  kestra-network:
    driver: bridge

volumes:
  postgres_data:
  kestra_data:
  kestra_logs:

services:
  postgres:
    image: postgres:15-alpine
    container_name: kestra-postgres-minimal
    environment:
      POSTGRES_DB: kestra
      POSTGRES_USER: kestra
      POSTGRES_PASSWORD: kestra123
    volumes:
      - postgres_data:/var/lib/postgresql/data
    networks:
      - kestra-network
    restart: unless-stopped
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U kestra -d kestra"]
      interval: 10s
      timeout: 5s
      retries: 5

  redis:
    image: redis:7-alpine
    container_name: kestra-redis-minimal
    command: redis-server --appendonly yes
    networks:
      - kestra-network
    restart: unless-stopped
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 10s
      timeout: 5s
      retries: 5

  kestra-minimal:
    image: kestra/kestra:latest
    container_name: kestra-minimal
    command: ["server", "local"]
    user: root
    ports:
      - "8081:8080"  # Porta diferente para não conflitar
    volumes:
      - /Users/user/.docker/run/docker.sock:/var/run/docker.sock
      - ./kestra/workflows:/app/workflows:ro
      - ./.env:/app/.env:ro
    environment:
      # APENAS os plugins essenciais para nosso projeto
      KESTRA_PLUGINS: >
        io.kestra.plugin:plugin-docker:[0.22,0.23)
        io.kestra.plugin:plugin-script-python:[0.22,0.23)
        io.kestra.plugin:plugin-fs:[0.22,0.23)
      
      # Python e ferramentas básicas
      APT_PACKAGES: "python3 python3-venv python-is-python3 python3-pip curl"
      PYTHON_LIBRARIES: "kestra python-dotenv requests openai supabase"
      
      # Database config
      KESTRA_REPOSITORY_TYPE: postgres
      KESTRA_QUEUE_TYPE: postgres
      KESTRA_DATASOURCES_DEFAULT_URL: jdbc:postgresql://postgres:5432/kestra
      KESTRA_DATASOURCES_DEFAULT_USERNAME: kestra
      KESTRA_DATASOURCES_DEFAULT_PASSWORD: kestra123
      
      # JVM otimizado
      JAVA_OPTS: "-server -XX:MaxRAMPercentage=50.0 -Xms256m -Xmx1g"
      
      # Timezone
      TZ: America/Sao_Paulo
    
    networks:
      - kestra-network
    
    depends_on:
      postgres:
        condition: service_healthy
      redis:
        condition: service_healthy
    
    restart: always
    
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8080/api/v1/flows"]
      interval: 30s
      timeout: 10s
      retries: 5
      start_period: 120s

  # WhatsApp Service (mantemos funcionando)
  whatsapp-service:
    build:
      context: .
      dockerfile: Dockerfile.whatsapp
    container_name: whatsapp-service-minimal
    ports:
      - "8000:8000"
    volumes:
      - ./.env:/app/.env:ro
      - ./scripts:/app/scripts:ro
      - ./utils:/app/utils:ro
    environment:
      - ENV_FILE=/app/.env
    networks:
      - kestra-network
    restart: unless-stopped
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8000/health"]
      interval: 30s
      timeout: 10s
      retries: 3 