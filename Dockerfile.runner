# Dockerfile.runner - Imagem customizada para Kestra Tasks
# Resolve o problema de montagem de volume incluindo todos os arquivos diretamente na imagem

FROM python:3.11-slim

# Instalar dependências do sistema necessárias
RUN apt-get update && apt-get install -y \
    build-essential \
    curl \
    git \
    && rm -rf /var/lib/apt/lists/*

# Definir diretório de trabalho
WORKDIR /app

# Copiar requirements primeiro (para cache eficiente do Docker)
COPY requirements.txt /app/requirements.txt
COPY kestra-requirements.txt /app/kestra-requirements.txt

# Instalar dependências Python
RUN pip install --no-cache-dir --upgrade pip && \
    pip install --no-cache-dir -r requirements.txt && \
    pip install --no-cache-dir -r kestra-requirements.txt

# Copiar TODOS os arquivos do projeto para a imagem
COPY . /app

# Definir variáveis de ambiente
ENV PYTHONPATH=/app
ENV PYTHONUNBUFFERED=1
ENV DEBIAN_FRONTEND=noninteractive

# Criar diretórios necessários se não existirem
RUN mkdir -p /app/scripts/serena_agent/tools && \
    mkdir -p /app/utils && \
    mkdir -p /app/kestra

# Verificar se os arquivos críticos estão presentes
RUN echo "=== VERIFICAÇÃO DOS ARQUIVOS COPIADOS ===" && \
    ls -la /app && \
    echo "=== CONTEÚDO DA PASTA SCRIPTS ===" && \
    ls -la /app/scripts/ && \
    echo "=== CONTEÚDO DO SERENA_AGENT ===" && \
    ls -la /app/scripts/serena_agent/ && \
    echo "=== CONTEÚDO DAS FERRAMENTAS ===" && \
    ls -la /app/scripts/serena_agent/tools/ && \
    echo "=== VERIFICAÇÃO COMPLETA ==="

# Comando padrão (pode ser sobrescrito pelo Kestra)
CMD ["python3"] 