#!/bin/bash

# Script de Diagn√≥stico de Autentica√ß√£o do Kestra v0.24.0
# Data: $(date)

echo "üîç Diagn√≥stico de Autentica√ß√£o do Kestra v0.24.0"
echo "================================================"
echo ""

# Configura√ß√µes
KESTRA_URL="https://kestra.darwinai.com.br"
USERNAME="leonardo@darwinai.com.br"
PASSWORD="@Atjlc151523"

# 1. Teste de conectividade b√°sica
echo "1. Testando conectividade b√°sica..."
echo "   URL: $KESTRA_URL"
echo ""

HTTP_STATUS=$(curl -s -o /dev/null -w "%{http_code}" "$KESTRA_URL" 2>/dev/null)

if [ "$HTTP_STATUS" = "401" ]; then
    echo "   ‚úÖ Servi√ßo respondendo (401 = Autentica√ß√£o requerida - NORMAL)"
elif [ "$HTTP_STATUS" = "200" ]; then
    echo "   ‚ö†Ô∏è  Servi√ßo respondendo sem autentica√ß√£o (200)"
elif [ "$HTTP_STATUS" = "000" ]; then
    echo "   ‚ùå Servi√ßo n√£o acess√≠vel (timeout/conex√£o recusada)"
else
    echo "   ‚ö†Ô∏è  Status HTTP: $HTTP_STATUS"
fi

echo ""

# 2. Teste de autentica√ß√£o
echo "2. Testando autentica√ß√£o..."
echo "   Username: $USERNAME"
echo "   Password: ${PASSWORD:0:3}***"
echo ""

AUTH_STATUS=$(curl -s -o /dev/null -w "%{http_code}" -u "$USERNAME:$PASSWORD" "$KESTRA_URL" 2>/dev/null)

if [ "$AUTH_STATUS" = "200" ]; then
    echo "   ‚úÖ Autentica√ß√£o funcionando (200)"
elif [ "$AUTH_STATUS" = "401" ]; then
    echo "   ‚ùå Credenciais inv√°lidas (401)"
elif [ "$AUTH_STATUS" = "000" ]; then
    echo "   ‚ùå Erro de conex√£o"
else
    echo "   ‚ö†Ô∏è  Status HTTP: $AUTH_STATUS"
fi

echo ""

# 3. Teste de resposta do conte√∫do
echo "3. Verificando resposta do conte√∫do..."
echo ""

CONTENT=$(curl -s "$KESTRA_URL" 2>/dev/null | head -20)

if echo "$CONTENT" | grep -q -i "kestra"; then
    echo "   ‚úÖ P√°gina do Kestra detectada"
elif echo "$CONTENT" | grep -q -i "login\|auth"; then
    echo "   ‚úÖ P√°gina de login detectada"
else
    echo "   ‚ö†Ô∏è  Conte√∫do n√£o reconhecido"
    echo "   Primeiras linhas:"
    echo "$CONTENT" | head -5
fi

echo ""

# 4. Teste com autentica√ß√£o e conte√∫do
echo "4. Testando acesso autenticado..."
echo ""

AUTH_CONTENT=$(curl -s -u "$USERNAME:$PASSWORD" "$KESTRA_URL" 2>/dev/null | head -20)

if echo "$AUTH_CONTENT" | grep -q -i "kestra"; then
    echo "   ‚úÖ Acesso autenticado funcionando"
    echo "   ‚úÖ Kestra v0.24.0 est√° operacional"
elif echo "$AUTH_CONTENT" | grep -q -i "error\|exception"; then
    echo "   ‚ùå Erro detectado na resposta"
    echo "   Conte√∫do:"
    echo "$AUTH_CONTENT" | head -10
else
    echo "   ‚ö†Ô∏è  Resposta n√£o reconhecida"
    echo "   Conte√∫do:"
    echo "$AUTH_CONTENT" | head -5
fi

echo ""
echo "================================================"
echo "üìã Resumo do Diagn√≥stico:"
echo ""

if [ "$HTTP_STATUS" = "401" ] && [ "$AUTH_STATUS" = "200" ]; then
    echo "‚úÖ TUDO FUNCIONANDO CORRETAMENTE!"
    echo "   - Kestra v0.24.0 est√° operacional"
    echo "   - Autentica√ß√£o b√°sica funcionando"
    echo "   - Use as credenciais para acessar a interface"
elif [ "$HTTP_STATUS" = "401" ] && [ "$AUTH_STATUS" = "401" ]; then
    echo "‚ùå PROBLEMA DE CREDENCIAIS"
    echo "   - Servi√ßo est√° funcionando"
    echo "   - Credenciais est√£o incorretas"
    echo "   - Verifique as vari√°veis no Coolify"
else
    echo "‚ö†Ô∏è  PROBLEMA DE CONECTIVIDADE"
    echo "   - Verifique se o servi√ßo est√° rodando"
    echo "   - Verifique logs no Coolify"
fi

echo ""
echo "üîß Pr√≥ximos passos:"
echo "   1. Verificar vari√°veis no Coolify"
echo "   2. Verificar logs do container kestra"
echo "   3. Testar em modo inc√≥gnito"
echo "   4. Se necess√°rio, reiniciar o servi√ßo"
