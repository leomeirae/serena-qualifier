#!/bin/bash

# Script para Corrigir Autentica√ß√£o do Kestra v0.24.0
# Data: $(date)

echo "üîß Corrigindo Autentica√ß√£o do Kestra v0.24.0"
echo "============================================="
echo ""

# Configura√ß√µes
KESTRA_URL="https://kestra.darwinai.com.br"
USERNAME="leonardo@darwinai.com.br"
PASSWORD="@Atjlc151523"

echo "üîç Diagn√≥stico Inicial..."
echo ""

# 1. Verificar se o servi√ßo est√° respondendo
echo "1. Verificando conectividade..."
HTTP_STATUS=$(curl -s -o /dev/null -w "%{http_code}" "$KESTRA_URL/ui/" 2>/dev/null)

if [ "$HTTP_STATUS" = "200" ]; then
    echo "   ‚úÖ Servi√ßo respondendo (200)"
elif [ "$HTTP_STATUS" = "401" ]; then
    echo "   ‚úÖ Servi√ßo respondendo (401 = Auth requerida)"
else
    echo "   ‚ùå Problema de conectividade (Status: $HTTP_STATUS)"
    exit 1
fi

echo ""

# 2. Testar diferentes combina√ß√µes de credenciais
echo "2. Testando diferentes configura√ß√µes de credenciais..."
echo ""

# Teste 1: Credenciais originais
echo "   Teste 1: Credenciais originais..."
AUTH_STATUS=$(curl -s -o /dev/null -w "%{http_code}" -u "$USERNAME:$PASSWORD" "$KESTRA_URL/ui/" 2>/dev/null)
echo "   Status: $AUTH_STATUS"

# Teste 2: Sem @ na senha
echo "   Teste 2: Senha sem @..."
PASSWORD_NO_AT="Atjlc151523"
AUTH_STATUS2=$(curl -s -o /dev/null -w "%{http_code}" -u "$USERNAME:$PASSWORD_NO_AT" "$KESTRA_URL/ui/" 2>/dev/null)
echo "   Status: $AUTH_STATUS2"

# Teste 3: Username diferente
echo "   Teste 3: Username simplificado..."
USERNAME_SIMPLE="leonardo"
AUTH_STATUS3=$(curl -s -o /dev/null -w "%{http_code}" -u "$USERNAME_SIMPLE:$PASSWORD" "$KESTRA_URL/ui/" 2>/dev/null)
echo "   Status: $AUTH_STATUS3"

echo ""

# 3. Verificar se h√° Setup Page dispon√≠vel
echo "3. Verificando Setup Page..."
echo ""

SETUP_CONTENT=$(curl -s "$KESTRA_URL/ui/" 2>/dev/null | grep -i "setup\|config\|admin" | head -3)

if [ -n "$SETUP_CONTENT" ]; then
    echo "   ‚úÖ Setup Page detectada"
    echo "   Conte√∫do encontrado:"
    echo "$SETUP_CONTENT"
else
    echo "   ‚ö†Ô∏è  Setup Page n√£o detectada"
fi

echo ""

# 4. Verificar logs do container (se poss√≠vel)
echo "4. Verificando configura√ß√£o atual..."
echo ""

echo "   üìã Vari√°veis de ambiente necess√°rias no Coolify:"
echo "   KESTRA_SERVER_BASICAUTH_USERNAME=leonardo@darwinai.com.br"
echo "   KESTRA_SERVER_BASICAUTH_PASSWORD=@Atjlc151523"
echo ""

echo "   üîß Solu√ß√µes poss√≠veis:"
echo ""

if [ "$AUTH_STATUS" = "200" ]; then
    echo "   ‚úÖ Credenciais originais funcionando!"
    echo "   Use: $USERNAME / $PASSWORD"
elif [ "$AUTH_STATUS2" = "200" ]; then
    echo "   ‚úÖ Credenciais sem @ funcionando!"
    echo "   Use: $USERNAME / $PASSWORD_NO_AT"
elif [ "$AUTH_STATUS3" = "200" ]; then
    echo "   ‚úÖ Username simplificado funcionando!"
    echo "   Use: $USERNAME_SIMPLE / $PASSWORD"
else
    echo "   ‚ùå Nenhuma combina√ß√£o funcionou"
    echo ""
    echo "   üõ†Ô∏è  A√ß√µes necess√°rias:"
    echo "   1. Verificar vari√°veis no Coolify"
    echo "   2. Reiniciar o container kestra"
    echo "   3. Usar Setup Page para configurar credenciais"
    echo "   4. Verificar logs do container"
fi

echo ""
echo "============================================="
echo "üìã Resumo das A√ß√µes:"
echo ""

if [ "$AUTH_STATUS" = "200" ] || [ "$AUTH_STATUS2" = "200" ] || [ "$AUTH_STATUS3" = "200" ]; then
    echo "‚úÖ CREDENCIAIS ENCONTRADAS!"
    echo "   Use as credenciais que retornaram status 200"
else
    echo "‚ùå PROBLEMA DE CONFIGURA√á√ÉO"
    echo ""
    echo "üîß Pr√≥ximos passos:"
    echo "   1. Acesse o painel do Coolify"
    echo "   2. Verifique as vari√°veis de ambiente do projeto"
    echo "   3. Adicione/atualize as vari√°veis:"
    echo "      KESTRA_SERVER_BASICAUTH_USERNAME=leonardo@darwinai.com.br"
    echo "      KESTRA_SERVER_BASICAUTH_PASSWORD=@Atjlc151523"
    echo "   4. Reinicie o container kestra"
    echo "   5. Teste novamente"
    echo ""
    echo "üåê Ou use a Setup Page:"
    echo "   Acesse: $KESTRA_URL/ui/"
    echo "   Configure as credenciais via interface web"
fi
