id: native-openai-simple
namespace: serena.energia
description: "Teste simples do plugin nativo OpenAI do Kestra"

triggers:
  - id: conversation-webhook
    type: io.kestra.plugin.core.trigger.Webhook
    key: ai_conversation_webhook_simple

inputs:
  - id: phone
    type: STRING
    required: true
    description: "Número de telefone do lead"
  - id: message
    type: STRING
    required: true
    description: "Mensagem enviada pelo lead"

tasks:
  # Task 1: Gerar resposta da IA usando plugin nativo OpenAI
  - id: generate-ai-response
    type: io.kestra.plugin.openai.ChatCompletion
    apiKey: "{{ secret('OPENAI_API_KEY') }}"
    model: "gpt-4o"
    messages:
      - role: system
        content: |
          Você é um Especialista em Vendas da Serena Energia, empresa líder em energia solar no Brasil.
          Seu objetivo é qualificar leads interessados em energia solar.
          Seja profissional, consultivo e orientado a resultados.
          
          Para dúvidas técnicas, use a ferramenta ask_knowledge_base.
          Para verificar cobertura por cidade, use query_serena_api.
      - role: user
        content: "{{ trigger.body.message }}"
    
    functions:
      - name: "ask_knowledge_base"
        description: "Busca informações na base de conhecimento sobre energia solar"
        parameters:
          type: object
          properties:
            query:
              type: string
              description: "Pergunta para buscar na base de conhecimento"
          required: ["query"]
      
      - name: "query_serena_api"
        description: "Consulta cobertura e planos da Serena por cidade"
        parameters:
          type: object
          properties:
            city:
              type: string
              description: "Nome da cidade"
            state:
              type: string
              description: "Sigla do estado (PE, SP, RJ)"
            action:
              type: string
              enum: ["check_coverage", "get_plans"]
              description: "Verificar cobertura ou buscar planos"
          required: ["city", "state", "action"]

  # Task 2: Verificar se precisa usar ferramentas
  - id: check-function-call
    type: io.kestra.plugin.core.flow.Switch
    value: "{{ outputs['generate-ai-response'].choices[0].message.function_call is defined }}"
    cases:
      "true":
        - id: log-function-call
          type: io.kestra.plugin.core.log.Log
          message: "IA quer usar ferramenta: {{ outputs['generate-ai-response'].choices[0].message.function_call.name }}"
      
      "false":
        - id: log-direct-response
          type: io.kestra.plugin.core.log.Log
          message: "IA respondeu diretamente: {{ outputs['generate-ai-response'].choices[0].message.content }}"

  # Task 3: Salvar resposta no log (simplificado)
  - id: save-response
    type: io.kestra.plugin.core.log.Log
    message: "RESPOSTA FINAL - Phone: {{ trigger.body.phone }} - Message: {{ trigger.body.message }} - AI Response: {{ outputs['generate-ai-response'].choices[0].message.content }}"

outputs:
  - id: final_response
    type: STRING
    value: "{{ outputs['generate-ai-response'].choices[0].message.content }}"
  - id: function_used
    type: STRING
    value: "{{ outputs['generate-ai-response'].choices[0].message.function_call.name if outputs['generate-ai-response'].choices[0].message.function_call is defined else 'none' }}" 