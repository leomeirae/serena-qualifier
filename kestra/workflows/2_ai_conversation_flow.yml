id: 2_ai_conversation_flow
namespace: serena.production
description: "Fluxo de Conversa com IA v9 - Agente com Consulta de Lead"

triggers:
  - id: webhook_lead_message
    type: io.kestra.plugin.core.trigger.Webhook
    key: converse_production_lead
    description: "Recebe mensagens do lead via WhatsApp Webhook"

variables:
  ai_model: "gpt-4o-mini"
  max_tokens: 1500
  temperature: 0.7

tasks:
  - id: run-silvia-agent
    type: io.kestra.plugin.scripts.python.Script
    description: "Executa o Agente de IA 'S√≠lvia' para processar a mensagem do lead."
    taskRunner:
      type: io.kestra.plugin.scripts.runner.docker.Docker
      image: python:3.11-slim

    env:
      OPENAI_API_KEY: "{{ secret('OPENAI_API_KEY') }}"
      DB_CONNECTION_STRING: "{{ secret('DB_CONNECTION_STRING') }}"
      SERENA_API_TOKEN: "{{ secret('SERENA_API_TOKEN') }}"
      SERENA_API_BASE_URL: "https://partnership-service-staging.api.srna.co"
      
    inputFiles:
      # Scripts do Agente
      scripts/agent_orchestrator.py: "{{ read('scripts/agent_orchestrator.py') }}"
      scripts/agent_tools/knowledge_base_tool.py: "{{ read('scripts/agent_tools/knowledge_base_tool.py') }}"
      scripts/agent_tools/faq_data.py: "{{ read('scripts/agent_tools/faq_data.py') }}"
      scripts/agent_tools/serena_tools.py: "{{ read('scripts/agent_tools/serena_tools.py') }}"
      scripts/agent_tools/supabase_agent_tools.py: "{{ read('scripts/agent_tools/supabase_agent_tools.py') }}"
      
      # Depend√™ncias
      scripts/serena_api.py: "{{ read('scripts/serena_api.py') }}"
      
      # __init__.py para os diret√≥rios
      scripts/__init__.py: ""
      scripts/agent_tools/__init__.py: ""
      
      # Arquivo de depend√™ncias com caminho expl√≠cito
      requirements.txt: |
        fastapi==0.110.1
        uvicorn[standard]==0.23.1
        requests==2.31.0
        supabase==2.0.2
        openai>=1.40.0
        anthropic==0.25.0
        google-generativeai==0.7.0
        pydantic==2.3.0
        pytesseract==0.3.10
        pdf2image==1.16.3
        opencv-python==4.8.1.78
        python-dotenv==1.0.1
        psycopg2-binary==2.9.9
        httpx==0.24.1
        tenacity==8.2.2

        # LangChain Core (vers√µes flex√≠veis - deixar pip resolver)
        langchain>=0.2.0
        langchain-openai>=0.1.0
        langchain-community>=0.2.0

        # RAG dependencies (NOVO)
        faiss-cpu==1.8.0
        tiktoken==0.7.0
        python-json-logger==2.0.7
        kestra==0.18.0
        urllib3==2.2.1
        chardet==5.2.0
        certifi==2024.7.4

    beforeCommands:
      - pip install -r requirements.txt --quiet

    script: |
      from scripts.agent_orchestrator import handle_agent_invocation
      phone_number = "{{ trigger.body.phone }}"
      user_message = "{{ trigger.body.message }}"
      # O n√∫mero de telefone tamb√©m √© o input inicial para o agente carregar o contexto
      initial_input = phone_number
      
      result = handle_agent_invocation(phone_number, user_message, initial_input)
      
      from kestra import Kestra
      Kestra.outputs({'response': result['response']})

  - id: log-whatsapp-debug
    type: io.kestra.plugin.core.log.Log
    runIf: "{{ outputs['run-silvia-agent'].exitCode == 0 }}"
    message: |
      üîç Debug WhatsApp - Preparando envio:
      Telefone: {{ trigger.body.phone }}
      Response exists: {{ outputs['run-silvia-agent'].vars.response != null }}
      Response not empty: {{ outputs['run-silvia-agent'].vars.response != '' }}
      Response length: {{ outputs['run-silvia-agent'].vars.response | length }}

  - id: send-whatsapp-reply
    type: io.kestra.plugin.core.http.Request
    uri: "https://graph.facebook.com/v20.0/599096403294262/messages"
    method: POST
    headers:
      Authorization: "Bearer {{ secret('WHATSAPP_API_TOKEN') }}"
      Content-Type: "application/json"
    body: |
      {
        "messaging_product": "whatsapp",
        "to": "{{ trigger.body.phone }}",
        "type": "text",
        "text": { "body": "{{ outputs['run-silvia-agent'].vars.response }}" }
      }
    runIf: "{{ outputs['run-silvia-agent'].exitCode == 0 and outputs['run-silvia-agent'].vars.response != null and outputs['run-silvia-agent'].vars.response != '' }}"

  - id: log-processo-ok
    type: io.kestra.plugin.core.log.Log
    runIf: "{{ outputs['run-silvia-agent'].exitCode == 0 }}"
    message: |
      ‚úÖ Lead respondido com sucesso via Agente S√≠lvia.
      Telefone: {{ trigger.body.phone }}
      Resposta: {{ outputs['run-silvia-agent'].vars.response }}

  - id: log-processo-erro
    type: io.kestra.plugin.core.log.Log
    level: ERROR
    runIf: "{{ outputs['run-silvia-agent'].exitCode != 0 }}"
    message: |
      ‚ùå Erro no processamento do Agente S√≠lvia.
      Telefone: {{ trigger.body.phone }}
      Erro: {{ outputs['run-silvia-agent'].stderr }}
      Verifique os logs detalhados da tarefa 'run-silvia-agent'.