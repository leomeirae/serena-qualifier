id: 1_lead_activation_flow
namespace: serena.production
description: "Fluxo de Produ√ß√£o 1: Salva o lead inicial no Supabase e envia o template de ativa√ß√£o."

triggers:
  - id: activate_production_lead
    type: io.kestra.plugin.core.trigger.Webhook
    key: activate_production_lead

tasks:
  # TAREFA 1: Checar se o lead j√° foi criado recentemente para evitar duplicados.
  - id: check_for_recent_lead
    type: io.kestra.plugin.scripts.python.Script
    description: "Verifica se um lead com o mesmo n√∫mero de WhatsApp foi criado nos √∫ltimos 5 minutos."
    taskRunner:
      type: io.kestra.plugin.scripts.runner.docker.Docker
      image: serena/kestra-python-runner:latest
      pullPolicy: NEVER
      networkMode: serena-qualifier_kestra-network
    env:
      DB_CONNECTION_STRING: "{{ secret('DB_CONNECTION_STRING') }}"
    script: |
      import psycopg2
      import os
      from datetime import datetime, timedelta
      import sys

      print("Iniciando verifica√ß√£o de idempot√™ncia...")
      phone_number = '{{ trigger.body.whatsapp }}'
      db_connection_string = os.environ['DB_CONNECTION_STRING']
      
      try:
          conn = psycopg2.connect(db_connection_string)
          cur = conn.cursor()
          
          # Verifica se existe um lead com o mesmo n√∫mero criado nos √∫ltimos 5 minutos
          five_minutes_ago = datetime.utcnow() - timedelta(minutes=5)
          
          query = """
          SELECT id, created_at FROM leads 
          WHERE phone_number = %s AND created_at > %s 
          ORDER BY created_at DESC LIMIT 1;
          """
          
          cur.execute(query, (phone_number, five_minutes_ago))
          recent_lead = cur.fetchone()
          
          cur.close()
          conn.close()
          
          if recent_lead:
              lead_id, created_at = recent_lead
              print(f"üõë Lead duplicado encontrado (ID: {lead_id}, Criado em: {created_at}). Abortando o fluxo para evitar duplicidade.")
              # Lan√ßa uma exce√ß√£o para parar o fluxo do Kestra
              raise Exception(f"Lead com n√∫mero {phone_number} j√° foi processado recentemente.")
          else:
              print("‚úÖ Nenhum lead duplicado recente encontrado. Prosseguindo com o fluxo.")
              
      except psycopg2.Error as e:
          print(f"‚ùå Erro de banco de dados durante a verifica√ß√£o de idempot√™ncia: {e}", file=sys.stderr)
          raise
      except Exception as e:
          print(f"‚ùå Erro inesperado durante a verifica√ß√£o de idempot√™ncia: {e}", file=sys.stderr)
          raise

  # TAREFA 2: Salvar o lead inicial no banco de dados.
  - id: save_initial_lead
    type: io.kestra.plugin.scripts.python.Script
    description: "Salva os dados iniciais do formul√°rio no Supabase via Conex√£o Direta."
    taskRunner:
      type: io.kestra.plugin.scripts.runner.docker.Docker
      image: serena/kestra-python-runner:latest
      pullPolicy: NEVER
      networkMode: serena-qualifier_kestra-network
    env:
      DB_CONNECTION_STRING: "{{ secret('DB_CONNECTION_STRING') }}"
    script: |
      import sys
      import os
      
      # Adiciona o diret√≥rio /app para que o Python possa encontrar seus scripts customizados
      sys.path.append('/app')
      
      # Importa a fun√ß√£o espec√≠fica do seu arquivo de script
      from scripts.save_lead_to_supabase import save_lead
      
      print("Chamando diretamente a fun√ß√£o save_lead usando o connection pooler do BD...")

      # Chama sua fun√ß√£o com os dados do gatilho.
      # A fun√ß√£o 'save_lead' agora ser√° capaz de encontrar o DB_CONNECTION_STRING.
      save_lead(
          name='{{ trigger.body.name }}',
          phone='{{ trigger.body.whatsapp }}',
          email='{{ trigger.body.email | default("") }}',
          account_value='{{ trigger.body.account_value | default("") }}',
          client_type='{{ trigger.body.client_type | default("") }}',
          state='{{ trigger.body.estado | default("") }}',
          city='{{ trigger.body.cidade | default("") }}'
      )

      print("‚úÖ Fun√ß√£o de salvamento do lead executada com sucesso.")

  # TAREFA 3: Enviar o template de ativa√ß√£o via WhatsApp.
  # Esta tarefa s√≥ executa se a anterior (save_initial_lead) for bem-sucedida.
  - id: send_activation_template
    type: io.kestra.plugin.scripts.python.Script
    description: "Envia o template inicial de WhatsApp para o lead."
    taskRunner:
      type: io.kestra.plugin.scripts.runner.docker.Docker
      image: serena/kestra-python-runner:latest
      pullPolicy: NEVER
      networkMode: serena-qualifier_kestra-network
    env:
      WHATSAPP_API_TOKEN: "{{ secret('WHATSAPP_API_TOKEN') }}"
      WHATSAPP_PHONE_NUMBER_ID: "{{ secret('WHATSAPP_PHONE_NUMBER_ID') }}"
      WHATSAPP_WELCOME_TEMPLATE_NAME: "{{ secret('WHATSAPP_WELCOME_TEMPLATE_NAME') }}"
    script: |
      import sys
      sys.path.append('/app')
      
      from scripts.send_whatsapp_template import send_activation_template
      import os

      result = send_activation_template(
          phone_number='{{ trigger.body.whatsapp }}',
          lead_name='{{ trigger.body.name }}',
          phone_number_id=os.environ['WHATSAPP_PHONE_NUMBER_ID'],
          template_name=os.environ['WHATSAPP_WELCOME_TEMPLATE_NAME']
      )
      
      # Sa√≠da para os logs
      success = result['success']
      message_id = result.get('message_id', 'N/A')
      
      print(f"SUCCESS: {success}")
      print(f"MESSAGE_ID: {message_id}")

  # TAREFA 4: Log de conclus√£o
  - id: log_completion
    type: io.kestra.plugin.core.log.Log
    description: "Registra conclus√£o do fluxo de ativa√ß√£o"
    message: |
      ‚úÖ FLUXO DE ATIVA√á√ÉO CONCLU√çDO
      ================================================
      Lead: {{ trigger.body.name }}
      Email: {{ trigger.body.email }}
      WhatsApp: {{ trigger.body.whatsapp }}
      Estado: {{ trigger.body.estado }}
      Cidade: {{ trigger.body.cidade }}
      Valor da Conta: R$ {{ trigger.body.account_value }}
      Timestamp: {{ execution.startDate }}
      
      O lead foi salvo no Supabase e o template de ativa√ß√£o foi enviado via WhatsApp. 